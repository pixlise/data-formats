syntax = "proto3";
option go_package = ".;protos";


// These are the permissions a user can have. They have to be defined in Auth0 and are included in
// the JWT permission list. API can verify that the permission required for a message has been set
// before allowing the request to be processed.
// NOTE: Each message name ending with Req is expected to have a line preceeding it
// that looks like this:
// requires(PERMISSION)
// Where PERMISSION is one of the below enums (with the PERM_ prefix removed)
enum Permission
{
    PERM_NONE = 0; // https://protobuf.dev/programming-guides/dos-donts/ says specify something at 0
    PERM_QUANTIFY = 1; // Can run quant jobs
    //PERM_JOB_ADMIN = 2; // Can view all quant jobs
    PERM_USER_ADMIN = 3; // Can edit users, roles, create/delete user-groups
    PERM_SCAN_EDIT = 5; // Can upload datasets, rename them, add images
    //PERM_BLESS_QUANT = 6; // Can mark a quant as "blessed"
    PERM_PIXLISE_ADMIN = 7;
    PERM_EDIT_DIFFRACTION = 9; // Can edit detected diffraction peak status AND add user defined peaks
    PERM_EXPORT = 10; // Can export data
    PERM_EDIT_EXPRESSION = 11; // Can edit/delete expressions, expression groups and data modules
    PERM_EDIT_API_SETTINGS = 12; // Can change system settings eg log level
    PERM_READ_PIQUANT_SETTINGS = 13; // Can read PIQUANT settings
    PERM_EDIT_PIQUANT_SETTINGS = 14; // Can write PIQUANT settings, eg current version to run
    PERM_EDIT_ROI = 15; // Can create/edit/delete ROIs
    PERM_EDIT_TAGS = 16; // Can create+edit tags
    PERM_EDIT_OWN_USER = 17; // Can edit own user account, eg notifications, name, email etc
    PERM_EDIT_VIEW_STATE = 18; // Can save view state
    PERM_EDIT_ELEMENT_SET = 19; // Can create/edit/delete Element Sets
    PERM_EDIT_EXPRESSION_GROUP = 20; // Can create/edit/delete Expression Groups (formerly known as RGB Mixes)
}

/*
Existing Permission	    Description	
write:quantification	Create Quantifications	
read:piquant-config	View piquant configurations per device	
write:piquant-config	Editing piquant configurations per device	
download:piquant	Downloading piquant binaries	
export:map	Allow exporting maps from map browser tab	
read:data-analysis	For reading ROI, element set, annotation, expressions	
write:data-analysis	For add/edit/delete of ROI, element set, annotation, expressions	
write:pixlise-settings	Saving PIXLISE app settings, eg view state	
read:pixlise-settings	Reading PIXLISE app settings, eg view state	
write:metrics	Saving metrics about user interaction/clicks etc	
read:piquant-jobs	View all active and completed piquant jobs	
read:user-roles	Viewing users and their roles	
write:shared-roi	Sharing ROIs	
write:shared-element-set	Sharing element sets	
write:shared-quantification	Sharing quantifications	
write:shared-annotation	Sharing spectrum chart annotations	
write:shared-expression	Sharing data expressions	
write:user-roles	Adding/deleting user roles	
access:PIXL-FM	Allows access to PIXL flightmodel datasets	
access:Stony Brook Breadboard	Test data from Stony Brook breadboard	
access:JPL Breadboard	Allows user access to JPL breadboard test data sets	
download:bulksum	Allows users to see/use bulk sum MSA download button	
no-permission	Marking user as not having permissions, different from Unassigned user, so we know what error msg to show for newly signed up users.	
access:PIXL-EM	Allows access to PIXL engineering model datasets	
write:bless-quant	Bless a (already shared) quantification	
write:publish-quant	Publish a quantification to PDS	
read:diffraction-peaks	Reading user created and accepted diffraction peaks	
write:diffraction-peaks	Create user defined diffraction peaks and accept automatically detected ones	
write:dataset	Allows editing datasets (titles, custom images)	
read:user-settings	Allows users own settings/name/data collection agreement to be read	
write:user-settings	Allows users own settings/name/data collection agreement to be saved	
read:logs	Reading API logs and log level	
write:log-level	Allows changing API log level (intended for Admins)	
write:test-endpoints	Allows calling test endpoints that simulate errors (intended for Admins)
*/