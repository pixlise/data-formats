syntax = "proto3";
option go_package = ".;protos";

// Where it came from - the instrument or some other source
enum ScanImageSource
{
    SI_UNKNOWN = 0; // https://protobuf.dev/programming-guides/dos-donts/ says specify an unknown as 0
    SI_INSTRUMENT = 1; // Instrument provided image, eg in PIXL case, it's an MCC image
    SI_UPLOAD = 2; // Any uploaded image that's not sourced from the instrument
}

// Image purpose - is it just for viewing, or perhaps it provides channel data to some algorithm
enum ScanImagePurpose
{
    SIP_UNKNOWN = 0; // https://protobuf.dev/programming-guides/dos-donts/ says specify an unknown as 0
    SIP_VIEWING = 1; // Just for viewing, as a background to scan points/other data
    SIP_MULTICHANNEL = 2; // For multi-channel analysis, so as source for binary plots, etc
}

// Describes a single image that is associated with a scan
message ScanImage
{
    // NOTE: This has to be unique, so it contains the scanId subdir that it's in. Eg for image named A.jpg
    //       for scan 123 this will always be 123/A.jpg
    //       Anything wanting to display just the image file name will have to use what's at the end of this path
    string imagePath = 1; // @gotags: bson:"_id,omitempty"

    ScanImageSource source = 2;
    uint32 width = 3;
    uint32 height = 4;
    uint32 fileSize = 5;
    ScanImagePurpose purpose = 6;

    // All scans associated with this image
    repeated string associatedScanIds = 7;
    
    // The scan the image originates from (in case of images taken by the
    // XRF instruments own camera, eg with PIXL, images taken by MCC)
    // If this is empty, this image came from another source
    string originScanId = 8;

    // Link to the original image - for PIXL this will be a link to Mars Viewer
    // but other devices/imports could define a link to some original image location
    string originImageURL = 9;

    // If its "matched" to another image, this should be filled out
    ImageMatchTransform matchInfo = 10;
}

message ImageMatchTransform
{
    // Name of the image file whose beam locations this image has been "matched" (aka warped) to
    string beamImageFileName = 1;

    // The transform to allow rendering the image relative to the existing beam locations
    // NOTE: These were previously floats, but were redefined to double so mongo stops complaining about
    // float64->float32 conversion losing accuracy. Might be due to user-entered values, eg entering 0.1
    // can't be repesented by float32... Other places might be OK because it's a computer-created value
    // eg a mouse drag event... but still, this might need to be done in a number of places.
    double xOffset = 2;
    double yOffset = 3;
    double xScale = 4;
    double yScale = 5;
}

message ScanImageDefaultDB
{
    string scanId = 1; // @gotags: bson:"_id,omitempty"
    string defaultImageFileName = 2;
}