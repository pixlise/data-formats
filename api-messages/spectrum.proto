syntax = "proto3";
option go_package = ".;protos";


import "scan.proto";


enum SpectrumType
{
    SPECTRUM_UNKNOWN = 0;
    SPECTRUM_MAX = 1;
    SPECTRUM_BULK = 2;
    SPECTRUM_NORMAL = 3;
    SPECTRUM_DWELL = 4;
}

message Spectrum
{
    string detector = 1; // Which detector the spectrum is from
    SpectrumType type = 2; // We store some "special" spectra in a dataset, such as the bulk-sum of all spectra, so
                           // it doesn't need to be calculated on the fly. It's also calculated on-board by the PIXL
                           // instrument
    repeated uint32 counts = 3; // Counts in each channel, encoded so that runs of 0s are run-length tagged
    uint32 maxCount = 4; // The maximum count found in the entire spectrum
    map<int32, ScanMetaDataItem> meta = 5; // Any meta-data for a spectrum is stored here. Examples are values in
                                           // MSA headers, such as energy calibrations, etc
}

message Spectra
{
    repeated Spectrum spectra = 1;
}

message ClientSpectrum
{
    string detector = 1;
    SpectrumType type = 2;
    repeated uint32 counts = 3;
    uint32 maxCount = 4;

    // Special client-version which has the labels in it already
    map<string, ScanMetaDataItem> meta = 5;
}

message ClientSpectrumEnergyCalibration
{
    float StarteV = 1;
    float PerChaneV = 2;
}

message ClientEnergyCalibration
{
    map<string, ClientSpectrumEnergyCalibration> DetectorCalibrations = 1;
}
