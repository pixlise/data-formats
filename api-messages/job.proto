syntax = "proto3";
option go_package = ".;protos";


message JobStatus
{
    enum Status
    {
		UNKNOWN = 0; // https://protobuf.dev/programming-guides/dos-donts/ says specify an unknown as 0
        STARTING = 1;
        PREPARING_NODES = 2;
        RUNNING = 3;
        GATHERING_RESULTS = 4;
        COMPLETE = 5;
        ERROR = 6;
    }

    string jobId = 1; // @gotags: bson:"_id,omitempty"
    Status status = 2;
    string message = 3; // Optionally a message can be stored with the status
    string logId = 4; // The log ID - initially just AWS <log group name>_<log stream id>

    // What the job is operating on. Set depending on job type:
    // JT_IMPORT_SCAN => scan id
    // JT_IMPORT_IMAGE => image name
    // JT_RUN_QUANT => quant id
    string jobItemId = 10;

    enum JobType
    {
		JT_UNKNOWN = 0; // https://protobuf.dev/programming-guides/dos-donts/ says specify an unknown as 0
        JT_IMPORT_SCAN = 1;
        JT_REIMPORT_SCAN = 2;
        JT_IMPORT_IMAGE = 3;
        JT_RUN_QUANT = 4;
    }

    JobType jobType = 11;

    uint32 startUnixTimeSec = 5; // Job start time
    uint32 lastUpdateUnixTimeSec = 6; // Job update time (if this changes, we send out an update)

    // Completion:
    uint32 endUnixTimeSec = 7; // Job completion time
    string outputFilePath = 8; // Where the job output its final result(s)
    repeated string otherLogFiles = 9; // Any other logs (eg PIQUANT log files) generated by the job

    // Job requestor
    string requestorUserId = 12; // Where the job output its final result(s)
}

// Which API instance wants to handle this job? This is only used
// when it's an external request and APIs realise that an unknown
// job got completed. Now one will have to handle things like
// notification, so at that point all APIs will write their instance
// ID here, wait a little, then read it back. The API matching the
// written instance ID gets to do the job!
message JobHandlerDBItem {
    string id = 1; // @gotags: bson:"_id,omitempty"

    string jobId = 2;
    string handlerInstanceId = 3;
    uint32 timeStampUnixSec = 4;
}