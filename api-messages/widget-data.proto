syntax = "proto3";
option go_package = ".;protos";

import "element-set.proto";
import "scan-beam-location.proto";

message VisibleROI
{
    string id = 1;
    string scanId = 2;
}

message SpectrumXRFLineState
{
    ElementLine lineInfo = 1;
    bool visible = 2;
}

message EnergyCalibration
{
    string detector = 1;
    float eVStart = 2;
    float eVPerChannel = 3;
}

message SpectrumLines
{
    string roiID = 1; // can be "dataset" or "selection" for those special cases
    repeated string lineExpressions = 2; // max(A), bulk(A) or things like sum(max(A), max(B))
}

message SpectrumWidgetState
{
    float panX = 1;
    float panY = 2;
    float zoomX = 3;
    float zoomY = 4;
    repeated SpectrumLines        spectrumLines = 5;
    bool logScale = 6;
    //repeated SpectrumXRFLineState xrflines = 7;
    bool showXAsEnergy = 8;
    //repeated EnergyCalibration    energyCalibration = 9;
    bool yCountsPerMin = 10;
    bool yCountsPerPMC = 11;
}

message HistogramState
{
    bool showStdDeviation = 1; // deprecated, see whiskerDisplayMode
    bool logScale = 2;
    repeated string expressionIDs = 3;
    repeated VisibleROI visibleROIs = 4;
    bool showWhiskers = 5; // deprecated, see zoomMode
    string whiskerDisplayMode = 6;
    string zoomMode = 7;
}

message ChordState
{
    bool showForSelection = 1;
    repeated string expressionIDs = 2;
    string displayROI = 3;
    float threshold = 4;
    string drawMode = 5;
}

message BinaryState
{
    bool showMmol = 1;
    repeated string expressionIDs = 2;
    repeated VisibleROI visibleROIs = 3;
    repeated string referenceIds = 4;
    optional double selectedMinXValue = 5;
    optional double selectedMaxXValue = 6;
    optional double selectedMinYValue = 7;
    optional double selectedMaxYValue = 8;
}

message TernaryState
{
    bool showMmol = 1;
    repeated string expressionIDs = 2;
    repeated VisibleROI visibleROIs = 3;
    repeated string referenceIds = 4;
}

message VisibleROIAndQuant
{
    string id = 1;
    string scanId = 2;
    string quantId = 3;
}

message TableState
{
    bool showPureElements = 1;
    string order = 2;
    repeated VisibleROIAndQuant visibleROIs = 3;
}

message ROIQuantTableState
{
    string roi = 1;
    repeated string quantIDs = 2;
}

message VariogramState
{
    repeated string expressionIDs = 1;
    repeated VisibleROI visibleROIs = 2;
    string varioModel = 3; // valid: "exponential", "spherical", "gaussian"
    float maxDistance = 4;
    int32 binCount = 5;
    bool drawModeVector = 6; // vector or isotropic
    repeated string comparisonAlgorithms = 7; // "Subtract", "XOR-Sum", <Expression ID>
    bool liveUpdate = 8;
    float distanceSliderMin = 9;
    float distanceSliderMax = 10;
    float binSliderMin = 11;
    float binSliderMax = 12;
    bool drawBestFit = 13;
}

message MapLayerGroupDisplayRange
{
    string expressionID = 1;
    float displayValueRangeMin = 2;
    float displayValueRangeMax = 3;
}

message MapLayerVisibility
{
    string expressionID = 1;
    float opacity = 2;
    bool visible = 3;

    float displayValueRangeMin = 4;
    float displayValueRangeMax = 5;
    string displayValueShading = 6;

    // For RGB Mixes, we want to store the display value ranges for each group of layers
    repeated MapLayerGroupDisplayRange displayValueRanges = 7;
}

message ROILayerVisibility
{
    string id = 1;
    float opacity = 2;
    bool visible = 3;
    string scanId = 4;
}

message ContextImageState
{
    float panX = 1;
    float panY = 2;
    float zoomX = 3;
    float zoomY = 4;
    bool showPoints = 5;
    bool showPointBBox = 6;
    string pointColourScheme = 7;
    string pointBBoxColourScheme = 8;
    string contextImage = 9;
    string contextImageSmoothing = 10;
    repeated MapLayerVisibility mapLayers = 11;
    repeated ROILayerVisibility roiLayers = 12;
    bool elementRelativeShading = 13;
    float brightness = 14;
    string rgbuChannels = 15;
    float unselectedOpacity = 16;
    bool unselectedGrayscale = 17;
    float colourRatioMin = 18;
    float colourRatioMax = 19;
    bool removeTopSpecularArtifacts = 20;
    bool removeBottomSpecularArtifacts = 21;
    repeated string hideFootprintsForScans = 22;
    repeated string hidePointsForScans = 23;
    reserved 24; // was drawImage
    bool unlinkFromDataset = 25;
    bool hideImage = 26; // Was drawImage but zero-value being false meant lots of hidden context images!
    bool showMISTROIReproducibility = 27;

    // Could store per-tool state
    //ActiveTool string activeTool = ;
    // SelectionAdditiveMode bool selectionAdditiveMode = ;
    // PMCToolPMC int32 pmcToolPMC = ;
}

enum LightMode
{
    LM_UNKNOWN = 0; // https://protobuf.dev/programming-guides/dos-donts/ says specify an unknown as 0
    LM_POINT = 1;
    LM_ENVIRONMENT = 3;
}

message Coordinate4D
{
    float x = 1;
    float y = 2;
    float z = 3;
    float w = 4;
}


message Scan3DViewState
{
    float brightness = 3;
    string rgbuChannels = 4;
    float unselectedOpacity = 5;
    bool unselectedGrayscale = 6;
    float colourRatioMin = 7;
    float colourRatioMax = 8;
    bool removeTopSpecularArtifacts = 9;
    bool removeBottomSpecularArtifacts = 10;
    repeated string hideFootprintsForScans = 11;
    repeated string hidePointsForScans = 12;
    string contextImage = 13;
    string contextImageSmoothing = 14;

    LightMode lightMode = 2;
    float planeYScale = 15;
    bool showFootprint = 16;
    Coordinate3D cameraPosition = 17;
    Coordinate4D cameraRotation = 18;
    Coordinate3D cameraTarget = 19;
    float cameraZoom = 20;
    float heightExaggerationScale = 21;
    Coordinate3D pointLightPosition = 22;

    repeated MapLayerVisibility mapLayers = 23;
    repeated ROILayerVisibility roiLayers = 24;
}

message AnnotationPoint
{
    float x = 1;
    float y = 2;
    float screenWidth = 3;
    float screenHeight = 4;
}

message FullScreenAnnotationItem
{
    string type = 1;
    repeated AnnotationPoint points = 2;
    string colour = 3;
    bool complete = 4;
    string text = 5;
    int32 fontSize = 6;
    int32 id = 7;
}

message AnnotationDisplayState
{
    repeated FullScreenAnnotationItem savedAnnotations = 1;
}

message ROIDisplayState
{
    map<string, string> roiColours = 1;
    map<string, string> roiShapes = 2;
}

message RGBUPlotWidgetState
{
    repeated string minerals = 1;
    string yChannelA = 2;
    string yChannelB = 3;
    string xChannelA = 4;
    string xChannelB = 5;
    bool drawMonochrome = 6;
    float selectedMinXValue = 7;
    float selectedMaxXValue = 8;
    float selectedMinYValue = 9;
    float selectedMaxYValue = 10;
    string imageName = 11;
    repeated string roiIds = 12;
}

message SingleAxisRGBUWidgetState
{
    repeated string minerals = 1;
    string channelA = 2;
    string channelB = 3;
    bool roiStackedOverlap = 4;
    string imageName = 5;
    float selectedMinValue = 6;
    float selectedMaxValue = 7;
    repeated string roiIds = 8;
    bool showAllMineralLabels = 9;
}

message RGBUImagesWidgetState
{
    // Setting was never implemented
    //bool logColour = 1;
    float brightness = 2;
    string imageName = 3;
}

message ParallelogramWidgetState
{
    repeated string regions = 1;
    repeated string channels = 2;
    reserved 3; // previously imageName, now comes from regions
    bool excludeZero = 4;
    string averageMode = 5; // "mean", "median"
    string sigmaLevel = 6; // None, Sigma +1, Sigma +2
}

message MarkdownViewState
{
    string content = 1;
}

message WidgetData
{
    string id = 1; // @gotags: bson:"_id,omitempty"
    string widgetName = 16; // @gotags: bson:"widgetName,omitempty"
    string widgetDescription = 17; // @gotags: bson:"widgetDescription,omitempty"

    SpectrumWidgetState spectrum = 2;
    BinaryState binary = 3;
    TernaryState ternary = 4;
    HistogramState histogram = 5;
    ContextImageState contextImage = 6;
    ChordState chord = 7;
    TableState table = 8;
    ROIQuantTableState roiQuantTable = 9;
    VariogramState variogram = 10;
    RGBUPlotWidgetState rgbuPlot = 11;
    SingleAxisRGBUWidgetState singleAxisRGBU = 12;
    RGBUImagesWidgetState rgbuImage = 13;
    ParallelogramWidgetState parallelogram = 14;
    MarkdownViewState markdownView = 15;
    Scan3DViewState scan3DView = 18;
}